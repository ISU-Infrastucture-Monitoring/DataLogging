

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 26 00:10:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	smallconst
    25  000600                     __psmallconst:
    26                           	opt stack 0
    27  000600  00                 	db	0
    28  000601                     _dpowers:
    29                           	opt stack 0
    30  000601  0001               	dw	1
    31  000603  0000               	dw	0
    32  000605  000A               	dw	10
    33  000607  0000               	dw	0
    34  000609  0064               	dw	100
    35  00060B  0000               	dw	0
    36  00060D  03E8               	dw	1000
    37  00060F  0000               	dw	0
    38  000611  2710               	dw	10000
    39  000613  0000               	dw	0
    40  000615  86A0               	dw	34464
    41  000617  0001               	dw	1
    42  000619  4240               	dw	16960
    43  00061B  000F               	dw	15
    44  00061D  9680               	dw	38528
    45  00061F  0098               	dw	152
    46  000621  E100               	dw	57600
    47  000623  05F5               	dw	1525
    48  000625  CA00               	dw	51712
    49  000627  3B9A               	dw	15258
    50  000629                     __end_of_dpowers:
    51                           	opt stack 0
    52  0000                     _BAUDCONbits	set	4024
    53  0000                     _INTCONbits	set	4082
    54  0000                     _IPR1bits	set	3999
    55  0000                     _IPR2bits	set	4002
    56  0000                     _OSCCONbits	set	4051
    57  0000                     _OSCTUNEbits	set	3995
    58  0000                     _PIE1bits	set	3997
    59  0000                     _PIE2bits	set	4000
    60  0000                     _PIR1bits	set	3998
    61  0000                     _PIR2bits	set	4001
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _SPBRG	set	4015
    64  0000                     _SPBRGH	set	4016
    65  0000                     _T1CONbits	set	4045
    66  0000                     _T3CONbits	set	4017
    67  0000                     _TMR1H	set	4047
    68  0000                     _TMR1L	set	4046
    69  0000                     _TMR3H	set	4019
    70  0000                     _TMR3L	set	4018
    71  0000                     _TXREG	set	4013
    72  0000                     _TXSTAbits	set	4012
    73  000629                     STR_1:
    74  000629  25                 	db	37
    75  00062A  6C                 	db	108	;'l'
    76  00062B  75                 	db	117	;'u'
    77  00062C  0A                 	db	10
    78  00062D  00                 	db	0
    79                           
    80                           ; #config settings
    81  00062E  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           	psect	cinit
    84  000A5E                     __pcinit:
    85                           	opt stack 0
    86  000A5E                     start_initialization:
    87                           	opt stack 0
    88  000A5E                     __initialization:
    89                           	opt stack 0
    90                           
    91                           ; Clear objects allocated to COMRAM (5 bytes)
    92  000A5E  6A50               	clrf	(__pbssCOMRAM+4)& (0+255),c
    93  000A60  6A4F               	clrf	(__pbssCOMRAM+3)& (0+255),c
    94  000A62  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
    95  000A64  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    96  000A66  6A4C               	clrf	__pbssCOMRAM& (0+255),c
    97  000A68                     end_of_initialization:
    98                           	opt stack 0
    99  000A68                     __end_of__initialization:
   100                           	opt stack 0
   101  000A68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   102  000A6A  6EF8               	movwf	tblptru,c
   103  000A6C  0100               	movlb	0
   104  000A6E  EF4C  F005         	goto	_main	;jump to C main() function
   105                           tblptru	equ	0xFF8
   106                           
   107                           	psect	bssCOMRAM
   108  00004C                     __pbssCOMRAM:
   109                           	opt stack 0
   110  00004C                     _Timer1OfCount:
   111                           	opt stack 0
   112  00004C                     	ds	2
   113  00004E                     _Timer3OfCount:
   114                           	opt stack 0
   115  00004E                     	ds	2
   116  000050                     _Done:
   117                           	opt stack 0
   118  000050                     	ds	1
   119                           tblptru	equ	0xFF8
   120                           
   121                           	psect	cstackCOMRAM
   122  000001                     __pcstackCOMRAM:
   123                           	opt stack 0
   124  000001                     ??_low_isr:
   125  000001                     
   126                           ; 0 bytes @ 0x0
   127  000001                     	ds	17
   128  000012                     ??_high_isr:
   129                           
   130                           ; 0 bytes @ 0x11
   131  000012                     	ds	14
   132  000020                     ?_get_freq:
   133                           	opt stack 0
   134  000020                     ?___lldiv:
   135                           	opt stack 0
   136  000020                     putch@c:
   137                           	opt stack 0
   138  000020                     ___lldiv@dividend:
   139                           	opt stack 0
   140                           
   141                           ; 4 bytes @ 0x1F
   142  000020                     	ds	4
   143  000024                     ??_get_freq:
   144  000024                     ___lldiv@divisor:
   145                           	opt stack 0
   146                           
   147                           ; 4 bytes @ 0x23
   148  000024                     	ds	4
   149  000028                     ___lldiv@quotient:
   150                           	opt stack 0
   151                           
   152                           ; 4 bytes @ 0x27
   153  000028                     	ds	2
   154  00002A                     get_freq@i:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x29
   158  00002A                     	ds	2
   159  00002C                     ___lldiv@counter:
   160                           	opt stack 0
   161  00002C                     get_freq@result:
   162                           	opt stack 0
   163                           
   164                           ; 4 bytes @ 0x2B
   165  00002C                     	ds	1
   166  00002D                     ?___llmod:
   167                           	opt stack 0
   168  00002D                     ___llmod@dividend:
   169                           	opt stack 0
   170                           
   171                           ; 4 bytes @ 0x2C
   172  00002D                     	ds	4
   173  000031                     ___llmod@divisor:
   174                           	opt stack 0
   175                           
   176                           ; 4 bytes @ 0x30
   177  000031                     	ds	4
   178  000035                     ___llmod@counter:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x34
   182  000035                     	ds	1
   183  000036                     ?_printf:
   184                           	opt stack 0
   185  000036                     printf@f:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x35
   189  000036                     	ds	6
   190  00003C                     ??_printf:
   191                           
   192                           ; 0 bytes @ 0x3B
   193  00003C                     	ds	2
   194  00003E                     printf@flag:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x3D
   198  00003E                     	ds	1
   199  00003F                     printf@prec:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x3E
   203  00003F                     	ds	2
   204  000041                     printf@val:
   205                           	opt stack 0
   206                           
   207                           ; 4 bytes @ 0x40
   208  000041                     	ds	4
   209  000045                     printf@ap:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x44
   213  000045                     	ds	2
   214  000047                     printf@c:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x46
   218  000047                     	ds	1
   219  000048                     InitApp@freq:
   220                           	opt stack 0
   221                           
   222                           ; 4 bytes @ 0x47
   223  000048                     	ds	4
   224  00004C                     tblptru	equ	0xFF8
   225                           
   226                           ; 0 bytes @ 0x4B
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 33 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;		None               void
   239 ;; Registers used:
   240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   246 ;;      Params:         0       0       0       0       0       0       0
   247 ;;      Locals:         0       0       0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0
   249 ;;      Totals:         0       0       0       0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels required when called:    5
   252 ;; This function calls:
   253 ;;		_ConfigureOscillator
   254 ;;		_InitApp
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text0
   261  000A98                     __ptext0:
   262                           	opt stack 0
   263  000A98                     _main:
   264                           	opt stack 26
   265                           
   266                           ;main.c: 36: ConfigureOscillator();
   267                           
   268                           ;incstack = 0
   269  000A98  EC53  F005         	call	_ConfigureOscillator	;wreg free
   270                           
   271                           ;main.c: 39: InitApp();
   272  000A9C  EC03  F005         	call	_InitApp	;wreg free
   273  000AA0  D7FF               	goto	l33
   274  000AA2  EF51  F000         	goto	start
   275  000AA6                     __end_of_main:
   276                           	opt stack 0
   277                           tblptru	equ	0xFF8
   278                           
   279 ;; *************** function _InitApp *****************
   280 ;; Defined at:
   281 ;;		line 37 in file "user.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;  freq            4   71[COMRAM] unsigned long 
   286 ;; Return value:  Size  Location     Type
   287 ;;		None               void
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   295 ;;      Params:         0       0       0       0       0       0       0
   296 ;;      Locals:         4       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0
   298 ;;      Totals:         4       0       0       0       0       0       0
   299 ;;Total ram usage:        4 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; Hardware stack levels required when called:    4
   302 ;; This function calls:
   303 ;;		_get_freq
   304 ;;		_init_serial
   305 ;;		_printf
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text1
   312  000A06                     __ptext1:
   313                           	opt stack 0
   314  000A06                     _InitApp:
   315                           	opt stack 26
   316                           
   317                           ;user.c: 40: T1CONbits.RD16 = 1;
   318                           
   319                           ;incstack = 0
   320  000A06  8ECD               	bsf	4045,7,c	;volatile
   321                           
   322                           ;user.c: 41: IPR1bits.TMR1IP = 1;
   323  000A08  809F               	bsf	3999,0,c	;volatile
   324                           
   325                           ;user.c: 42: PIR1bits.TMR1IF = 0;
   326  000A0A  909E               	bcf	3998,0,c	;volatile
   327                           
   328                           ;user.c: 43: PIE1bits.TMR1IE = 1;
   329  000A0C  809D               	bsf	3997,0,c	;volatile
   330                           
   331                           ;user.c: 51: T3CONbits.RD16 = 0;
   332  000A0E  9EB1               	bcf	4017,7,c	;volatile
   333                           
   334                           ;user.c: 52: T3CONbits.T3CKPS = 2;
   335  000A10  50B1               	movf	4017,w,c	;volatile
   336  000A12  0BCF               	andlw	-49
   337  000A14  0920               	iorlw	32
   338  000A16  6EB1               	movwf	4017,c	;volatile
   339                           
   340                           ;user.c: 53: T3CONbits.TMR3CS = 0;
   341  000A18  92B1               	bcf	4017,1,c	;volatile
   342                           
   343                           ;user.c: 56: IPR2bits.TMR3IP = 1;
   344  000A1A  82A2               	bsf	4002,1,c	;volatile
   345                           
   346                           ;user.c: 57: PIR2bits.TMR3IF = 0;
   347  000A1C  92A1               	bcf	4001,1,c	;volatile
   348                           
   349                           ;user.c: 58: PIE2bits.TMR3IE = 1;
   350  000A1E  82A0               	bsf	4000,1,c	;volatile
   351                           
   352                           ;user.c: 61: INTCONbits.GIE = 1;
   353  000A20  8EF2               	bsf	intcon,7,c	;volatile
   354                           
   355                           ;user.c: 62: INTCONbits.PEIE = 1;
   356  000A22  8CF2               	bsf	intcon,6,c	;volatile
   357                           
   358                           ;user.c: 64: init_serial();
   359  000A24  EC39  F005         	call	_init_serial	;wreg free
   360  000A28  D000               	goto	l1028
   361  000A2A                     l1028:
   362                           
   363                           ;user.c: 68: {
   364                           ;user.c: 69: freq = get_freq();
   365  000A2A  ECE6  F003         	call	_get_freq	;wreg free
   366  000A2E  C020  F048         	movff	?_get_freq,InitApp@freq
   367  000A32  C021  F049         	movff	?_get_freq+1,InitApp@freq+1
   368  000A36  C022  F04A         	movff	?_get_freq+2,InitApp@freq+2
   369  000A3A  C023  F04B         	movff	?_get_freq+3,InitApp@freq+3
   370                           
   371                           ;user.c: 70: printf("%lu\n", freq);
   372  000A3E  0E29               	movlw	low STR_1
   373  000A40  6E36               	movwf	printf@f,c
   374  000A42  0E06               	movlw	high STR_1
   375  000A44  6E37               	movwf	printf@f+1,c
   376  000A46  C048  F038         	movff	InitApp@freq,?_printf+2
   377  000A4A  C049  F039         	movff	InitApp@freq+1,?_printf+3
   378  000A4E  C04A  F03A         	movff	InitApp@freq+2,?_printf+4
   379  000A52  C04B  F03B         	movff	InitApp@freq+3,?_printf+5
   380  000A56  EC18  F003         	call	_printf	;wreg free
   381  000A5A  D7E7               	goto	l1028
   382  000A5C  0012               	return		;funcret
   383  000A5E                     __end_of_InitApp:
   384                           	opt stack 0
   385                           tblptru	equ	0xFF8
   386                           intcon	equ	0xFF2
   387                           
   388 ;; *************** function _printf *****************
   389 ;; Defined at:
   390 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  f               2   53[COMRAM] PTR const unsigned char 
   393 ;;		 -> STR_1(5), 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  val             4   64[COMRAM] unsigned long 
   396 ;;  tmpval          4    0        struct .
   397 ;;  cp              3    0        PTR const unsigned char 
   398 ;;  ap              2   68[COMRAM] PTR void [1]
   399 ;;		 -> ?_printf(2), 
   400 ;;  prec            2   62[COMRAM] int 
   401 ;;  len             2    0        unsigned int 
   402 ;;  c               1   70[COMRAM] char 
   403 ;;  flag            1   61[COMRAM] unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2   53[COMRAM] int 
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   413 ;;      Params:         6       0       0       0       0       0       0
   414 ;;      Locals:        10       0       0       0       0       0       0
   415 ;;      Temps:          2       0       0       0       0       0       0
   416 ;;      Totals:        18       0       0       0       0       0       0
   417 ;;Total ram usage:       18 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; Hardware stack levels required when called:    3
   420 ;; This function calls:
   421 ;;		___lldiv
   422 ;;		___llmod
   423 ;;		_putch
   424 ;; This function is called by:
   425 ;;		_InitApp
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text2
   430  000630                     __ptext2:
   431                           	opt stack 0
   432  000630                     _printf:
   433                           	opt stack 26
   434                           
   435                           ;doprnt.c: 466: va_list ap;
   436                           ;doprnt.c: 499: signed char c;
   437                           ;doprnt.c: 504: int prec;
   438                           ;doprnt.c: 508: unsigned char flag;
   439                           ;doprnt.c: 523: union {
   440                           ;doprnt.c: 524: unsigned long vd;
   441                           ;doprnt.c: 525: double integ;
   442                           ;doprnt.c: 526: } tmpval;
   443                           ;doprnt.c: 528: unsigned long val;
   444                           ;doprnt.c: 529: unsigned len;
   445                           ;doprnt.c: 530: const char * cp;
   446                           ;doprnt.c: 533: *ap = __va_start();
   447                           
   448                           ;incstack = 0
   449  000630  0E38               	movlw	low (?_printf+2)
   450  000632  6E45               	movwf	printf@ap,c
   451  000634  0E00               	movlw	high (?_printf+2)
   452  000636  6E46               	movwf	printf@ap+1,c
   453                           
   454                           ;doprnt.c: 536: while(c = *f++) {
   455  000638  D0BA               	goto	l1008
   456  00063A                     l964:
   457                           
   458                           ;doprnt.c: 538: if(c != '%')
   459  00063A  0E25               	movlw	37
   460  00063C  1847               	xorwf	printf@c,w,c
   461  00063E  B4D8               	btfsc	status,2,c
   462  000640  D004               	goto	l968
   463                           
   464                           ;doprnt.c: 540: {
   465                           ;doprnt.c: 541: (putch(c) );
   466  000642  5047               	movf	printf@c,w,c
   467  000644  EC43  F005         	call	_putch
   468                           
   469                           ;doprnt.c: 542: continue;
   470  000648  D0B2               	goto	l1008
   471  00064A                     l968:
   472                           
   473                           ;doprnt.c: 543: }
   474                           ;doprnt.c: 548: flag = 0;
   475  00064A  0E00               	movlw	0
   476  00064C  6E3E               	movwf	printf@flag,c
   477                           
   478                           ;doprnt.c: 635: switch(c = *f++) {
   479                           
   480                           ;doprnt.c: 633: loop:
   481  00064E  D007               	goto	l976
   482                           
   483                           ;doprnt.c: 638: goto alldone;
   484                           
   485                           ;doprnt.c: 637: case 0:
   486  000650  D0BC               	goto	l146
   487  000652                     l970:
   488                           
   489                           ;doprnt.c: 643: flag |= 0x10;
   490  000652  883E               	bsf	printf@flag,4,c
   491                           
   492                           ;doprnt.c: 644: goto loop;
   493  000654  D004               	goto	l976
   494                           
   495                           ;doprnt.c: 813: continue;
   496                           
   497                           ;doprnt.c: 802: default:
   498  000656  D0AB               	goto	l1008
   499  000658                     l972:
   500                           
   501                           ;doprnt.c: 818: flag |= 0xC0;
   502  000658  0EC0               	movlw	192
   503  00065A  123E               	iorwf	printf@flag,f,c
   504                           
   505                           ;doprnt.c: 822: }
   506                           
   507                           ;doprnt.c: 819: break;
   508  00065C  D014               	goto	l136
   509  00065E                     l976:
   510  00065E  C036  FFF6         	movff	printf@f,tblptrl
   511  000662  C037  FFF7         	movff	printf@f+1,tblptrh
   512  000666  4A36               	infsnz	printf@f,f,c
   513  000668  2A37               	incf	printf@f+1,f,c
   514  00066A                     	if	0	;tblptru may be non-zero
   515  00066A                     	endif
   516  00066A                     	if	0	;tblptru may be non-zero
   517  00066A                     	endif
   518  00066A  0008               	tblrd		*
   519  00066C  CFF5 F047          	movff	tablat,printf@c
   520  000670  5047               	movf	printf@c,w,c
   521                           
   522                           ; Switch size 1, requested type "space"
   523                           ; Number of cases is 3, Range of values is 0 to 117
   524                           ; switch strategies available:
   525                           ; Name         Instructions Cycles
   526                           ; simple_byte           10     6 (average)
   527                           ;	Chosen strategy is simple_byte
   528  000672  0A00               	xorlw	0	; case 0
   529  000674  B4D8               	btfsc	status,2,c
   530  000676  D0A9               	goto	l146
   531  000678  0A6C               	xorlw	108	; case 108
   532  00067A  B4D8               	btfsc	status,2,c
   533  00067C  D7EA               	goto	l970
   534  00067E  0A19               	xorlw	25	; case 117
   535  000680  B4D8               	btfsc	status,2,c
   536  000682  D7EA               	goto	l972
   537  000684  D094               	goto	l1008
   538  000686                     l136:
   539                           
   540                           ;doprnt.c: 1273: {
   541                           ;doprnt.c: 1281: if(flag & 0x10)
   542  000686  A83E               	btfss	printf@flag,4,c
   543  000688  D00E               	goto	l982
   544                           
   545                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
   546  00068A  C045  FFD9         	movff	printf@ap,fsr2l
   547  00068E  C046  FFDA         	movff	printf@ap+1,fsr2h
   548  000692  CFDE F041          	movff	postinc2,printf@val
   549  000696  CFDE F042          	movff	postinc2,printf@val+1
   550  00069A  CFDE F043          	movff	postinc2,printf@val+2
   551  00069E  CFDE F044          	movff	postinc2,printf@val+3
   552  0006A2  0E04               	movlw	4
   553  0006A4  D00F               	goto	L1
   554  0006A6                     l982:
   555                           
   556                           ;doprnt.c: 1283: else
   557                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
   558  0006A6  C045  FFD9         	movff	printf@ap,fsr2l
   559  0006AA  C046  FFDA         	movff	printf@ap+1,fsr2h
   560  0006AE  CFDE F03C          	movff	postinc2,??_printf
   561  0006B2  CFDD F03D          	movff	postdec2,??_printf+1
   562  0006B6  C03C  F041         	movff	??_printf,printf@val
   563  0006BA  C03D  F042         	movff	??_printf+1,printf@val+1
   564  0006BE  6A43               	clrf	printf@val+2,c
   565  0006C0  6A44               	clrf	printf@val+3,c
   566  0006C2  0E02               	movlw	2
   567  0006C4                     L1:
   568  0006C4  2645               	addwf	printf@ap,f,c
   569  0006C6  0E00               	movlw	0
   570  0006C8  2246               	addwfc	printf@ap+1,f,c
   571  0006CA  D000               	goto	l986
   572  0006CC                     l986:
   573                           
   574                           ;doprnt.c: 1287: }
   575                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   576  0006CC  0E01               	movlw	1
   577  0006CE  6E47               	movwf	printf@c,c
   578  0006D0                     l988:
   579  0006D0  0E0A               	movlw	10
   580  0006D2  1847               	xorwf	printf@c,w,c
   581  0006D4  B4D8               	btfsc	status,2,c
   582  0006D6  D01C               	goto	l1000
   583  0006D8  D001               	goto	l992
   584  0006DA  D01A               	goto	l1000
   585  0006DC                     l992:
   586                           
   587                           ;doprnt.c: 1306: if(val < dpowers[c])
   588  0006DC  5047               	movf	printf@c,w,c
   589  0006DE  0D04               	mullw	4
   590  0006E0  0E01               	movlw	low _dpowers
   591  0006E2  24F3               	addwf	prodl,w,c
   592  0006E4  6EF6               	movwf	tblptrl,c
   593  0006E6  0E06               	movlw	high _dpowers
   594  0006E8  20F4               	addwfc	prodh,w,c
   595  0006EA  6EF7               	movwf	tblptrh,c
   596  0006EC                     	if	0	;There are less than 3 active tblptr bytes
   597  0006EC                     	endif
   598  0006EC  0009               	tblrd		*+
   599  0006EE  50F5               	movf	tablat,w,c
   600  0006F0  5C41               	subwf	printf@val,w,c
   601  0006F2  0009               	tblrd		*+
   602  0006F4  50F5               	movf	tablat,w,c
   603  0006F6  5842               	subwfb	printf@val+1,w,c
   604  0006F8  0009               	tblrd		*+
   605  0006FA  50F5               	movf	tablat,w,c
   606  0006FC  5843               	subwfb	printf@val+2,w,c
   607  0006FE  0009               	tblrd		*+
   608  000700  50F5               	movf	tablat,w,c
   609  000702  5844               	subwfb	printf@val+3,w,c
   610  000704  A0D8               	btfss	status,0,c
   611  000706  D004               	goto	l1000
   612  000708  D001               	goto	l996
   613                           
   614                           ;doprnt.c: 1307: break;
   615  00070A  D002               	goto	l1000
   616  00070C                     l996:
   617  00070C  2A47               	incf	printf@c,f,c
   618  00070E  D7E0               	goto	l988
   619  000710                     l1000:
   620                           
   621                           ;doprnt.c: 1422: {
   622                           ;doprnt.c: 1469: }
   623                           ;doprnt.c: 1472: prec = c;
   624  000710  5047               	movf	printf@c,w,c
   625  000712  6E3F               	movwf	printf@prec,c
   626  000714  6A40               	clrf	printf@prec+1,c
   627  000716  BE3F               	btfsc	printf@prec,7,c
   628  000718  0640               	decf	printf@prec+1,f,c
   629                           
   630                           ;doprnt.c: 1474: while(prec--) {
   631  00071A  D03F               	goto	l1006
   632  00071C                     l1002:
   633                           
   634                           ;doprnt.c: 1478: {
   635                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
   636  00071C  C03F  F03C         	movff	printf@prec,??_printf
   637  000720  C040  F03D         	movff	printf@prec+1,??_printf+1
   638  000724  90D8               	bcf	status,0,c
   639  000726  363C               	rlcf	??_printf,f,c
   640  000728  363D               	rlcf	??_printf+1,f,c
   641  00072A  90D8               	bcf	status,0,c
   642  00072C  363C               	rlcf	??_printf,f,c
   643  00072E  363D               	rlcf	??_printf+1,f,c
   644  000730  0E01               	movlw	low _dpowers
   645  000732  243C               	addwf	??_printf,w,c
   646  000734  6EF6               	movwf	tblptrl,c
   647  000736  0E06               	movlw	high _dpowers
   648  000738  203D               	addwfc	??_printf+1,w,c
   649  00073A  6EF7               	movwf	tblptrh,c
   650  00073C                     	if	0	;There are less than 3 active tblptr bytes
   651  00073C                     	endif
   652  00073C  0009               	tblrd		*+
   653  00073E  CFF5 F024          	movff	tablat,___lldiv@divisor
   654  000742  0009               	tblrd		*+
   655  000744  CFF5 F025          	movff	tablat,___lldiv@divisor+1
   656  000748  0009               	tblrd		*+
   657  00074A  CFF5 F026          	movff	tablat,___lldiv@divisor+2
   658  00074E  000A               	tblrd		*-
   659  000750  CFF5 F027          	movff	tablat,___lldiv@divisor+3
   660  000754  C041  F020         	movff	printf@val,___lldiv@dividend
   661  000758  C042  F021         	movff	printf@val+1,___lldiv@dividend+1
   662  00075C  C043  F022         	movff	printf@val+2,___lldiv@dividend+2
   663  000760  C044  F023         	movff	printf@val+3,___lldiv@dividend+3
   664  000764  EC85  F004         	call	___lldiv	;wreg free
   665  000768  C020  F02D         	movff	?___lldiv,___llmod@dividend
   666  00076C  C021  F02E         	movff	?___lldiv+1,___llmod@dividend+1
   667  000770  C022  F02F         	movff	?___lldiv+2,___llmod@dividend+2
   668  000774  C023  F030         	movff	?___lldiv+3,___llmod@dividend+3
   669  000778  0E0A               	movlw	10
   670  00077A  6E31               	movwf	___llmod@divisor,c
   671  00077C  0E00               	movlw	0
   672  00077E  6E32               	movwf	___llmod@divisor+1,c
   673  000780  0E00               	movlw	0
   674  000782  6E33               	movwf	___llmod@divisor+2,c
   675  000784  0E00               	movlw	0
   676  000786  6E34               	movwf	___llmod@divisor+3,c
   677  000788  ECCB  F004         	call	___llmod	;wreg free
   678  00078C  502D               	movf	?___llmod,w,c
   679  00078E  0F30               	addlw	48
   680  000790  6E47               	movwf	printf@c,c
   681                           
   682                           ;doprnt.c: 1523: }
   683                           ;doprnt.c: 1524: (putch(c) );
   684  000792  5047               	movf	printf@c,w,c
   685  000794  EC43  F005         	call	_putch
   686  000798  D000               	goto	l1006
   687  00079A                     l1006:
   688  00079A  063F               	decf	printf@prec,f,c
   689  00079C  A0D8               	btfss	status,0,c
   690  00079E  0640               	decf	printf@prec+1,f,c
   691  0007A0  283F               	incf	printf@prec,w,c
   692  0007A2  E1BC               	bnz	l1002
   693  0007A4  2840               	incf	printf@prec+1,w,c
   694  0007A6  B4D8               	btfsc	status,2,c
   695  0007A8  D002               	goto	l1008
   696  0007AA  D7B8               	goto	l1002
   697  0007AC  D000               	goto	l1008
   698  0007AE                     l1008:
   699  0007AE  C036  FFF6         	movff	printf@f,tblptrl
   700  0007B2  C037  FFF7         	movff	printf@f+1,tblptrh
   701  0007B6  4A36               	infsnz	printf@f,f,c
   702  0007B8  2A37               	incf	printf@f+1,f,c
   703  0007BA                     	if	0	;tblptru may be non-zero
   704  0007BA                     	endif
   705  0007BA                     	if	0	;tblptru may be non-zero
   706  0007BA                     	endif
   707  0007BA  0008               	tblrd		*
   708  0007BC  CFF5 F047          	movff	tablat,printf@c
   709  0007C0  5047               	movf	printf@c,w,c
   710  0007C2  B4D8               	btfsc	status,2,c
   711  0007C4  D002               	goto	l146
   712  0007C6  D739               	goto	l964
   713  0007C8  D000               	goto	l146
   714  0007CA                     l146:
   715  0007CA  0012               	return		;funcret
   716  0007CC                     __end_of_printf:
   717                           	opt stack 0
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           prodh	equ	0xFF4
   723                           prodl	equ	0xFF3
   724                           intcon	equ	0xFF2
   725                           postinc2	equ	0xFDE
   726                           postdec2	equ	0xFDD
   727                           fsr2h	equ	0xFDA
   728                           fsr2l	equ	0xFD9
   729                           status	equ	0xFD8
   730                           
   731 ;; *************** function _putch *****************
   732 ;; Defined at:
   733 ;;		line 36 in file "serial.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  c               1    wreg     unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  c               1   31[COMRAM] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		wreg
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         1       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0
   750 ;;      Totals:         1       0       0       0       0       0       0
   751 ;;Total ram usage:        1 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    2
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_printf
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text3
   762  000A86                     __ptext3:
   763                           	opt stack 0
   764  000A86                     _putch:
   765                           	opt stack 26
   766                           
   767                           ;incstack = 0
   768                           ;putch@c stored from wreg
   769  000A86  6E20               	movwf	putch@c,c
   770                           
   771                           ;serial.c: 38: PIR1bits.TXIF = 0;
   772  000A88  989E               	bcf	3998,4,c	;volatile
   773                           
   774                           ;serial.c: 39: TXREG = c;
   775  000A8A  C020  FFAD         	movff	putch@c,4013	;volatile
   776                           
   777                           ;serial.c: 40: while(PIR1bits.TXIF == 0);
   778  000A8E  D000               	goto	l112
   779  000A90                     l112:
   780  000A90  A89E               	btfss	3998,4,c	;volatile
   781  000A92  D7FE               	goto	l112
   782                           
   783                           ;serial.c: 41: PIR1bits.TXIF = 0;
   784  000A94  989E               	bcf	3998,4,c	;volatile
   785  000A96  0012               	return		;funcret
   786  000A98                     __end_of_putch:
   787                           	opt stack 0
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           prodh	equ	0xFF4
   793                           prodl	equ	0xFF3
   794                           intcon	equ	0xFF2
   795                           postinc2	equ	0xFDE
   796                           postdec2	equ	0xFDD
   797                           fsr2h	equ	0xFDA
   798                           fsr2l	equ	0xFD9
   799                           status	equ	0xFD8
   800                           
   801 ;; *************** function ___llmod *****************
   802 ;; Defined at:
   803 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  dividend        4   44[COMRAM] unsigned long 
   806 ;;  divisor         4   48[COMRAM] unsigned long 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  counter         1   52[COMRAM] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  4   44[COMRAM] unsigned long 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   818 ;;      Params:         8       0       0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0
   821 ;;      Totals:         9       0       0       0       0       0       0
   822 ;;Total ram usage:        9 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    2
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_printf
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text4
   833  000996                     __ptext4:
   834                           	opt stack 0
   835  000996                     ___llmod:
   836                           	opt stack 26
   837                           
   838                           ;incstack = 0
   839  000996  5031               	movf	___llmod@divisor,w,c
   840  000998  1032               	iorwf	___llmod@divisor+1,w,c
   841  00099A  1033               	iorwf	___llmod@divisor+2,w,c
   842  00099C  1034               	iorwf	___llmod@divisor+3,w,c
   843  00099E  B4D8               	btfsc	status,2,c
   844  0009A0  D029               	goto	l614
   845  0009A2  0E01               	movlw	1
   846  0009A4  6E35               	movwf	___llmod@counter,c
   847  0009A6  D007               	goto	l932
   848  0009A8                     l930:
   849  0009A8  90D8               	bcf	status,0,c
   850  0009AA  3631               	rlcf	___llmod@divisor,f,c
   851  0009AC  3632               	rlcf	___llmod@divisor+1,f,c
   852  0009AE  3633               	rlcf	___llmod@divisor+2,f,c
   853  0009B0  3634               	rlcf	___llmod@divisor+3,f,c
   854  0009B2  2A35               	incf	___llmod@counter,f,c
   855  0009B4  D000               	goto	l932
   856  0009B6                     l932:
   857  0009B6  BE34               	btfsc	___llmod@divisor+3,7,c
   858  0009B8  D002               	goto	l934
   859  0009BA  D7F6               	goto	l930
   860  0009BC  D000               	goto	l934
   861  0009BE                     l934:
   862  0009BE  5031               	movf	___llmod@divisor,w,c
   863  0009C0  5C2D               	subwf	___llmod@dividend,w,c
   864  0009C2  5032               	movf	___llmod@divisor+1,w,c
   865  0009C4  582E               	subwfb	___llmod@dividend+1,w,c
   866  0009C6  5033               	movf	___llmod@divisor+2,w,c
   867  0009C8  582F               	subwfb	___llmod@dividend+2,w,c
   868  0009CA  5034               	movf	___llmod@divisor+3,w,c
   869  0009CC  5830               	subwfb	___llmod@dividend+3,w,c
   870  0009CE  A0D8               	btfss	status,0,c
   871  0009D0  D009               	goto	l938
   872  0009D2  5031               	movf	___llmod@divisor,w,c
   873  0009D4  5E2D               	subwf	___llmod@dividend,f,c
   874  0009D6  5032               	movf	___llmod@divisor+1,w,c
   875  0009D8  5A2E               	subwfb	___llmod@dividend+1,f,c
   876  0009DA  5033               	movf	___llmod@divisor+2,w,c
   877  0009DC  5A2F               	subwfb	___llmod@dividend+2,f,c
   878  0009DE  5034               	movf	___llmod@divisor+3,w,c
   879  0009E0  5A30               	subwfb	___llmod@dividend+3,f,c
   880  0009E2  D000               	goto	l938
   881  0009E4                     l938:
   882  0009E4  90D8               	bcf	status,0,c
   883  0009E6  3234               	rrcf	___llmod@divisor+3,f,c
   884  0009E8  3233               	rrcf	___llmod@divisor+2,f,c
   885  0009EA  3232               	rrcf	___llmod@divisor+1,f,c
   886  0009EC  3231               	rrcf	___llmod@divisor,f,c
   887  0009EE  2E35               	decfsz	___llmod@counter,f,c
   888  0009F0  D7E6               	goto	l934
   889  0009F2  D000               	goto	l614
   890  0009F4                     l614:
   891  0009F4  C02D  F02D         	movff	___llmod@dividend,?___llmod
   892  0009F8  C02E  F02E         	movff	___llmod@dividend+1,?___llmod+1
   893  0009FC  C02F  F02F         	movff	___llmod@dividend+2,?___llmod+2
   894  000A00  C030  F030         	movff	___llmod@dividend+3,?___llmod+3
   895  000A04  0012               	return		;funcret
   896  000A06                     __end_of___llmod:
   897                           	opt stack 0
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           prodh	equ	0xFF4
   903                           prodl	equ	0xFF3
   904                           intcon	equ	0xFF2
   905                           postinc2	equ	0xFDE
   906                           postdec2	equ	0xFDD
   907                           fsr2h	equ	0xFDA
   908                           fsr2l	equ	0xFD9
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function ___lldiv *****************
   912 ;; Defined at:
   913 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  dividend        4   31[COMRAM] unsigned long 
   916 ;;  divisor         4   35[COMRAM] unsigned long 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  quotient        4   39[COMRAM] unsigned long 
   919 ;;  counter         1   43[COMRAM] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  4   31[COMRAM] unsigned long 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   929 ;;      Params:         8       0       0       0       0       0       0
   930 ;;      Locals:         5       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0
   932 ;;      Totals:        13       0       0       0       0       0       0
   933 ;;Total ram usage:       13 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    2
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_printf
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text5
   944  00090A                     __ptext5:
   945                           	opt stack 0
   946  00090A                     ___lldiv:
   947                           	opt stack 26
   948                           
   949                           ;incstack = 0
   950  00090A  0E00               	movlw	0
   951  00090C  6E28               	movwf	___lldiv@quotient,c
   952  00090E  0E00               	movlw	0
   953  000910  6E29               	movwf	___lldiv@quotient+1,c
   954  000912  0E00               	movlw	0
   955  000914  6E2A               	movwf	___lldiv@quotient+2,c
   956  000916  0E00               	movlw	0
   957  000918  6E2B               	movwf	___lldiv@quotient+3,c
   958  00091A  5024               	movf	___lldiv@divisor,w,c
   959  00091C  1025               	iorwf	___lldiv@divisor+1,w,c
   960  00091E  1026               	iorwf	___lldiv@divisor+2,w,c
   961  000920  1027               	iorwf	___lldiv@divisor+3,w,c
   962  000922  B4D8               	btfsc	status,2,c
   963  000924  D02F               	goto	l604
   964  000926  0E01               	movlw	1
   965  000928  6E2C               	movwf	___lldiv@counter,c
   966  00092A  D007               	goto	l912
   967  00092C                     l910:
   968  00092C  90D8               	bcf	status,0,c
   969  00092E  3624               	rlcf	___lldiv@divisor,f,c
   970  000930  3625               	rlcf	___lldiv@divisor+1,f,c
   971  000932  3626               	rlcf	___lldiv@divisor+2,f,c
   972  000934  3627               	rlcf	___lldiv@divisor+3,f,c
   973  000936  2A2C               	incf	___lldiv@counter,f,c
   974  000938  D000               	goto	l912
   975  00093A                     l912:
   976  00093A  BE27               	btfsc	___lldiv@divisor+3,7,c
   977  00093C  D002               	goto	l914
   978  00093E  D7F6               	goto	l910
   979  000940  D000               	goto	l914
   980  000942                     l914:
   981  000942  90D8               	bcf	status,0,c
   982  000944  3628               	rlcf	___lldiv@quotient,f,c
   983  000946  3629               	rlcf	___lldiv@quotient+1,f,c
   984  000948  362A               	rlcf	___lldiv@quotient+2,f,c
   985  00094A  362B               	rlcf	___lldiv@quotient+3,f,c
   986  00094C  5024               	movf	___lldiv@divisor,w,c
   987  00094E  5C20               	subwf	___lldiv@dividend,w,c
   988  000950  5025               	movf	___lldiv@divisor+1,w,c
   989  000952  5821               	subwfb	___lldiv@dividend+1,w,c
   990  000954  5026               	movf	___lldiv@divisor+2,w,c
   991  000956  5822               	subwfb	___lldiv@dividend+2,w,c
   992  000958  5027               	movf	___lldiv@divisor+3,w,c
   993  00095A  5823               	subwfb	___lldiv@dividend+3,w,c
   994  00095C  A0D8               	btfss	status,0,c
   995  00095E  D00A               	goto	l922
   996  000960  5024               	movf	___lldiv@divisor,w,c
   997  000962  5E20               	subwf	___lldiv@dividend,f,c
   998  000964  5025               	movf	___lldiv@divisor+1,w,c
   999  000966  5A21               	subwfb	___lldiv@dividend+1,f,c
  1000  000968  5026               	movf	___lldiv@divisor+2,w,c
  1001  00096A  5A22               	subwfb	___lldiv@dividend+2,f,c
  1002  00096C  5027               	movf	___lldiv@divisor+3,w,c
  1003  00096E  5A23               	subwfb	___lldiv@dividend+3,f,c
  1004  000970  8028               	bsf	___lldiv@quotient,0,c
  1005  000972  D000               	goto	l922
  1006  000974                     l922:
  1007  000974  90D8               	bcf	status,0,c
  1008  000976  3227               	rrcf	___lldiv@divisor+3,f,c
  1009  000978  3226               	rrcf	___lldiv@divisor+2,f,c
  1010  00097A  3225               	rrcf	___lldiv@divisor+1,f,c
  1011  00097C  3224               	rrcf	___lldiv@divisor,f,c
  1012  00097E  2E2C               	decfsz	___lldiv@counter,f,c
  1013  000980  D7E0               	goto	l914
  1014  000982  D000               	goto	l604
  1015  000984                     l604:
  1016  000984  C028  F020         	movff	___lldiv@quotient,?___lldiv
  1017  000988  C029  F021         	movff	___lldiv@quotient+1,?___lldiv+1
  1018  00098C  C02A  F022         	movff	___lldiv@quotient+2,?___lldiv+2
  1019  000990  C02B  F023         	movff	___lldiv@quotient+3,?___lldiv+3
  1020  000994  0012               	return		;funcret
  1021  000996                     __end_of___lldiv:
  1022                           	opt stack 0
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           prodh	equ	0xFF4
  1028                           prodl	equ	0xFF3
  1029                           intcon	equ	0xFF2
  1030                           postinc2	equ	0xFDE
  1031                           postdec2	equ	0xFDD
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _init_serial *****************
  1037 ;; Defined at:
  1038 ;;		line 22 in file "serial.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, status,2
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1052 ;;      Params:         0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0
  1055 ;;      Totals:         0       0       0       0       0       0       0
  1056 ;;Total ram usage:        0 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    2
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_InitApp
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text6
  1067  000A72                     __ptext6:
  1068                           	opt stack 0
  1069  000A72                     _init_serial:
  1070                           	opt stack 27
  1071                           
  1072                           ;serial.c: 24: SPBRGH = 0;
  1073                           
  1074                           ;incstack = 0
  1075  000A72  0E00               	movlw	0
  1076  000A74  6EB0               	movwf	4016,c	;volatile
  1077                           
  1078                           ;serial.c: 25: SPBRG = 68;
  1079  000A76  0E44               	movlw	68
  1080  000A78  6EAF               	movwf	4015,c	;volatile
  1081                           
  1082                           ;serial.c: 26: TXSTAbits.BRGH = 1;
  1083  000A7A  84AC               	bsf	4012,2,c	;volatile
  1084                           
  1085                           ;serial.c: 27: BAUDCONbits.BRG16 = 1;
  1086  000A7C  86B8               	bsf	4024,3,c	;volatile
  1087                           
  1088                           ;serial.c: 29: TXSTAbits.SYNC = 0;
  1089  000A7E  98AC               	bcf	4012,4,c	;volatile
  1090                           
  1091                           ;serial.c: 30: RCSTAbits.SPEN = 1;
  1092  000A80  8EAB               	bsf	4011,7,c	;volatile
  1093                           
  1094                           ;serial.c: 32: TXSTAbits.TXEN = 1;
  1095  000A82  8AAC               	bsf	4012,5,c	;volatile
  1096  000A84  0012               	return		;funcret
  1097  000A86                     __end_of_init_serial:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           prodh	equ	0xFF4
  1104                           prodl	equ	0xFF3
  1105                           intcon	equ	0xFF2
  1106                           postinc2	equ	0xFDE
  1107                           postdec2	equ	0xFDD
  1108                           fsr2h	equ	0xFDA
  1109                           fsr2l	equ	0xFD9
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function _get_freq *****************
  1113 ;; Defined at:
  1114 ;;		line 74 in file "user.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  result          4   43[COMRAM] unsigned long 
  1119 ;;  i               2   41[COMRAM] int 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  4   31[COMRAM] unsigned long 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1129 ;;      Params:         4       0       0       0       0       0       0
  1130 ;;      Locals:         6       0       0       0       0       0       0
  1131 ;;      Temps:          6       0       0       0       0       0       0
  1132 ;;      Totals:        16       0       0       0       0       0       0
  1133 ;;Total ram usage:       16 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    2
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_InitApp
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text7
  1144  0007CC                     __ptext7:
  1145                           	opt stack 0
  1146  0007CC                     _get_freq:
  1147                           	opt stack 27
  1148                           
  1149                           ;user.c: 76: int i = 0;
  1150                           
  1151                           ;incstack = 0
  1152  0007CC  0E00               	movlw	0
  1153  0007CE  6E2B               	movwf	get_freq@i+1,c
  1154  0007D0  0E00               	movlw	0
  1155  0007D2  6E2A               	movwf	get_freq@i,c
  1156                           
  1157                           ;user.c: 77: Timer1OfCount = 0;
  1158  0007D4  0E00               	movlw	0
  1159  0007D6  6E4D               	movwf	_Timer1OfCount+1,c	;volatile
  1160  0007D8  0E00               	movlw	0
  1161  0007DA  6E4C               	movwf	_Timer1OfCount,c	;volatile
  1162                           
  1163                           ;user.c: 78: Timer3OfCount = 0;
  1164  0007DC  0E00               	movlw	0
  1165  0007DE  6E4F               	movwf	_Timer3OfCount+1,c	;volatile
  1166  0007E0  0E00               	movlw	0
  1167  0007E2  6E4E               	movwf	_Timer3OfCount,c	;volatile
  1168                           
  1169                           ;user.c: 80: TMR3H = 0;
  1170  0007E4  0E00               	movlw	0
  1171  0007E6  6EB3               	movwf	4019,c	;volatile
  1172                           
  1173                           ;user.c: 81: TMR3L = 0;
  1174  0007E8  0E00               	movlw	0
  1175  0007EA  6EB2               	movwf	4018,c	;volatile
  1176                           
  1177                           ;user.c: 82: TMR1H = 0;
  1178  0007EC  0E00               	movlw	0
  1179  0007EE  6ECF               	movwf	4047,c	;volatile
  1180                           
  1181                           ;user.c: 83: TMR1L = 0;
  1182  0007F0  0E00               	movlw	0
  1183  0007F2  6ECE               	movwf	4046,c	;volatile
  1184                           
  1185                           ;user.c: 85: Done = 0;
  1186  0007F4  0E00               	movlw	0
  1187  0007F6  6E50               	movwf	_Done,c	;volatile
  1188                           
  1189                           ;user.c: 87: T1CONbits.TMR1ON = 1;
  1190  0007F8  80CD               	bsf	4045,0,c	;volatile
  1191                           
  1192                           ;user.c: 88: T3CONbits.TMR3ON = 1;
  1193  0007FA  80B1               	bsf	4017,0,c	;volatile
  1194                           
  1195                           ;user.c: 90: while (!Done)
  1196  0007FC  D003               	goto	l950
  1197  0007FE                     l948:
  1198                           
  1199                           ;user.c: 91: {
  1200                           ;user.c: 93: i++;
  1201  0007FE  4A2A               	infsnz	get_freq@i,f,c
  1202  000800  2A2B               	incf	get_freq@i+1,f,c
  1203  000802  D000               	goto	l950
  1204  000804                     l950:
  1205  000804  5050               	movf	_Done,w,c	;volatile
  1206  000806  B4D8               	btfsc	status,2,c
  1207  000808  D7FA               	goto	l948
  1208                           
  1209                           ;user.c: 94: }
  1210                           ;user.c: 97: uint32_t result = TMR3L;
  1211  00080A  50B2               	movf	4018,w,c	;volatile
  1212  00080C  6E2C               	movwf	get_freq@result,c
  1213  00080E  6A2D               	clrf	get_freq@result+1,c
  1214  000810  6A2E               	clrf	get_freq@result+2,c
  1215  000812  6A2F               	clrf	get_freq@result+3,c
  1216                           
  1217                           ;user.c: 98: result += TMR3H << 8;
  1218  000814  50B3               	movf	4019,w,c	;volatile
  1219  000816  6E25               	movwf	(??_get_freq+1)& (0+255),c
  1220  000818  6A24               	clrf	??_get_freq& (0+255),c
  1221  00081A  C024  F026         	movff	??_get_freq,??_get_freq+2
  1222  00081E  C025  F027         	movff	??_get_freq+1,??_get_freq+3
  1223  000822  0E00               	movlw	0
  1224  000824  BE27               	btfsc	(??_get_freq+3)& (0+255),7,c
  1225  000826  0EFF               	movlw	255
  1226  000828  6E28               	movwf	(??_get_freq+4)& (0+255),c
  1227  00082A  6E29               	movwf	(??_get_freq+5)& (0+255),c
  1228  00082C  5026               	movf	??_get_freq+2,w,c
  1229  00082E  262C               	addwf	get_freq@result,f,c
  1230  000830  5027               	movf	??_get_freq+3,w,c
  1231  000832  222D               	addwfc	get_freq@result+1,f,c
  1232  000834  5028               	movf	??_get_freq+4,w,c
  1233  000836  222E               	addwfc	get_freq@result+2,f,c
  1234  000838  5029               	movf	??_get_freq+5,w,c
  1235  00083A  222F               	addwfc	get_freq@result+3,f,c
  1236                           
  1237                           ;user.c: 99: result += ((uint32_t)Timer3OfCount) << 16;
  1238  00083C  504E               	movf	_Timer3OfCount,w,c	;volatile
  1239  00083E  6E24               	movwf	??_get_freq& (0+255),c
  1240  000840  504F               	movf	_Timer3OfCount+1,w,c	;volatile
  1241  000842  6E25               	movwf	(??_get_freq+1)& (0+255),c
  1242  000844  6A26               	clrf	(??_get_freq+2)& (0+255),c
  1243  000846  6A27               	clrf	(??_get_freq+3)& (0+255),c
  1244  000848  C025  F027         	movff	??_get_freq+1,??_get_freq+3
  1245  00084C  C024  F026         	movff	??_get_freq,??_get_freq+2
  1246  000850  6A25               	clrf	??_get_freq+1,c
  1247  000852  6A24               	clrf	??_get_freq,c
  1248  000854  5024               	movf	??_get_freq,w,c
  1249  000856  262C               	addwf	get_freq@result,f,c
  1250  000858  5025               	movf	??_get_freq+1,w,c
  1251  00085A  222D               	addwfc	get_freq@result+1,f,c
  1252  00085C  5026               	movf	??_get_freq+2,w,c
  1253  00085E  222E               	addwfc	get_freq@result+2,f,c
  1254  000860  5027               	movf	??_get_freq+3,w,c
  1255  000862  222F               	addwfc	get_freq@result+3,f,c
  1256                           
  1257                           ;user.c: 101: return result;
  1258  000864  C02C  F020         	movff	get_freq@result,?_get_freq
  1259  000868  C02D  F021         	movff	get_freq@result+1,?_get_freq+1
  1260  00086C  C02E  F022         	movff	get_freq@result+2,?_get_freq+2
  1261  000870  C02F  F023         	movff	get_freq@result+3,?_get_freq+3
  1262  000874  D000               	goto	l92
  1263  000876                     l92:
  1264  000876  0012               	return		;funcret
  1265  000878                     __end_of_get_freq:
  1266                           	opt stack 0
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           prodh	equ	0xFF4
  1272                           prodl	equ	0xFF3
  1273                           intcon	equ	0xFF2
  1274                           postinc2	equ	0xFDE
  1275                           postdec2	equ	0xFDD
  1276                           fsr2h	equ	0xFDA
  1277                           fsr2l	equ	0xFD9
  1278                           status	equ	0xFD8
  1279                           
  1280 ;; *************** function _ConfigureOscillator *****************
  1281 ;; Defined at:
  1282 ;;		line 24 in file "system.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, status,2
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1296 ;;      Params:         0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    2
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text8
  1311  000AA6                     __ptext8:
  1312                           	opt stack 0
  1313  000AA6                     _ConfigureOscillator:
  1314                           	opt stack 28
  1315                           
  1316                           ;system.c: 26: OSCTUNEbits.PLLEN = 1;
  1317                           
  1318                           ;incstack = 0
  1319  000AA6  8C9B               	bsf	3995,6,c	;volatile
  1320                           
  1321                           ;system.c: 27: OSCCONbits.IRCF = 7;
  1322  000AA8  88D3               	bsf	4051,4,c	;volatile
  1323  000AAA  8AD3               	bsf	4051,5,c	;volatile
  1324  000AAC  8CD3               	bsf	4051,6,c	;volatile
  1325                           
  1326                           ;system.c: 28: OSCCONbits.SCS = 3;
  1327  000AAE  0E03               	movlw	3
  1328  000AB0  12D3               	iorwf	4051,f,c	;volatile
  1329  000AB2  0012               	return		;funcret
  1330  000AB4                     __end_of_ConfigureOscillator:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           prodh	equ	0xFF4
  1337                           prodl	equ	0xFF3
  1338                           intcon	equ	0xFF2
  1339                           postinc2	equ	0xFDE
  1340                           postdec2	equ	0xFDD
  1341                           fsr2h	equ	0xFDA
  1342                           fsr2l	equ	0xFD9
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _low_isr *****************
  1346 ;; Defined at:
  1347 ;;		line 72 in file "interrupts.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;		None               void
  1354 ;; Registers used:
  1355 ;;		None
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1361 ;;      Params:         0       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0
  1363 ;;      Temps:         17       0       0       0       0       0       0
  1364 ;;      Totals:        17       0       0       0       0       0       0
  1365 ;;Total ram usage:       17 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		Interrupt level 1
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	intcodelo
  1376  000018                     __pintcodelo:
  1377                           	opt stack 0
  1378  000018                     _low_isr:
  1379                           	opt stack 26
  1380                           
  1381                           ;incstack = 0
  1382  000018  CFD8 F001          	movff	status,??_low_isr
  1383  00001C  CFE8 F002          	movff	wreg,??_low_isr+1
  1384  000020  CFE0 F003          	movff	bsr,??_low_isr+2
  1385  000024  CFFA F004          	movff	pclath,??_low_isr+3
  1386  000028  CFFB F005          	movff	pclatu,??_low_isr+4
  1387  00002C  CFE9 F006          	movff	fsr0l,??_low_isr+5
  1388  000030  CFEA F007          	movff	fsr0h,??_low_isr+6
  1389  000034  CFE1 F008          	movff	fsr1l,??_low_isr+7
  1390  000038  CFE2 F009          	movff	fsr1h,??_low_isr+8
  1391  00003C  CFD9 F00A          	movff	fsr2l,??_low_isr+9
  1392  000040  CFDA F00B          	movff	fsr2h,??_low_isr+10
  1393  000044  CFF3 F00C          	movff	prodl,??_low_isr+11
  1394  000048  CFF4 F00D          	movff	prodh,??_low_isr+12
  1395  00004C  CFF6 F00E          	movff	tblptrl,??_low_isr+13
  1396  000050  CFF7 F00F          	movff	tblptrh,??_low_isr+14
  1397  000054  CFF8 F010          	movff	tblptru,??_low_isr+15
  1398  000058  CFF5 F011          	movff	tablat,??_low_isr+16
  1399  00005C  C011  FFF5         	movff	??_low_isr+16,tablat
  1400  000060  C010  FFF8         	movff	??_low_isr+15,tblptru
  1401  000064  C00F  FFF7         	movff	??_low_isr+14,tblptrh
  1402  000068  C00E  FFF6         	movff	??_low_isr+13,tblptrl
  1403  00006C  C00D  FFF4         	movff	??_low_isr+12,prodh
  1404  000070  C00C  FFF3         	movff	??_low_isr+11,prodl
  1405  000074  C00B  FFDA         	movff	??_low_isr+10,fsr2h
  1406  000078  C00A  FFD9         	movff	??_low_isr+9,fsr2l
  1407  00007C  C009  FFE2         	movff	??_low_isr+8,fsr1h
  1408  000080  C008  FFE1         	movff	??_low_isr+7,fsr1l
  1409  000084  C007  FFEA         	movff	??_low_isr+6,fsr0h
  1410  000088  C006  FFE9         	movff	??_low_isr+5,fsr0l
  1411  00008C  C005  FFFB         	movff	??_low_isr+4,pclatu
  1412  000090  C004  FFFA         	movff	??_low_isr+3,pclath
  1413  000094  C003  FFE0         	movff	??_low_isr+2,bsr
  1414  000098  C002  FFE8         	movff	??_low_isr+1,wreg
  1415  00009C  C001  FFD8         	movff	??_low_isr,status
  1416  0000A0  0010               	retfie	
  1417  0000A2                     __end_of_low_isr:
  1418                           	opt stack 0
  1419                           pclatu	equ	0xFFB
  1420                           pclath	equ	0xFFA
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodh	equ	0xFF4
  1426                           prodl	equ	0xFF3
  1427                           intcon	equ	0xFF2
  1428                           fsr0h	equ	0xFEA
  1429                           fsr0l	equ	0xFE9
  1430                           wreg	equ	0xFE8
  1431                           fsr1h	equ	0xFE2
  1432                           fsr1l	equ	0xFE1
  1433                           bsr	equ	0xFE0
  1434                           postinc2	equ	0xFDE
  1435                           postdec2	equ	0xFDD
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _high_isr *****************
  1441 ;; Defined at:
  1442 ;;		line 31 in file "interrupts.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;		None               void
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1456 ;;      Params:         0       0       0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0
  1458 ;;      Temps:         14       0       0       0       0       0       0
  1459 ;;      Totals:        14       0       0       0       0       0       0
  1460 ;;Total ram usage:       14 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		Interrupt level 2
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	intcode
  1470  000008                     __pintcode:
  1471                           	opt stack 0
  1472  000008                     _high_isr:
  1473                           	opt stack 26
  1474                           
  1475                           ;incstack = 0
  1476  000008  CFFA F012          	movff	pclath,??_high_isr
  1477  00000C  CFFB F013          	movff	pclatu,??_high_isr+1
  1478  000010  CFE9 F014          	movff	fsr0l,??_high_isr+2
  1479  000014  ED3C  F004         	call	int_func,f	;refresh shadow registers
  1480                           pclatu	equ	0xFFB
  1481                           pclath	equ	0xFFA
  1482                           tblptru	equ	0xFF8
  1483                           tblptrh	equ	0xFF7
  1484                           tblptrl	equ	0xFF6
  1485                           tablat	equ	0xFF5
  1486                           prodh	equ	0xFF4
  1487                           prodl	equ	0xFF3
  1488                           intcon	equ	0xFF2
  1489                           fsr0h	equ	0xFEA
  1490                           fsr0l	equ	0xFE9
  1491                           wreg	equ	0xFE8
  1492                           fsr1h	equ	0xFE2
  1493                           fsr1l	equ	0xFE1
  1494                           bsr	equ	0xFE0
  1495                           postinc2	equ	0xFDE
  1496                           postdec2	equ	0xFDD
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501                           	psect	intcode_body
  1502  000878                     __pintcode_body:
  1503                           	opt stack 26
  1504  000878                     int_func:
  1505                           	opt stack 26
  1506  000878  0006               	pop		; remove dummy address from shadow register refresh
  1507  00087A  CFEA F015          	movff	fsr0h,??_high_isr+3
  1508  00087E  CFE1 F016          	movff	fsr1l,??_high_isr+4
  1509  000882  CFE2 F017          	movff	fsr1h,??_high_isr+5
  1510  000886  CFD9 F018          	movff	fsr2l,??_high_isr+6
  1511  00088A  CFDA F019          	movff	fsr2h,??_high_isr+7
  1512  00088E  CFF3 F01A          	movff	prodl,??_high_isr+8
  1513  000892  CFF4 F01B          	movff	prodh,??_high_isr+9
  1514  000896  CFF6 F01C          	movff	tblptrl,??_high_isr+10
  1515  00089A  CFF7 F01D          	movff	tblptrh,??_high_isr+11
  1516  00089E  CFF8 F01E          	movff	tblptru,??_high_isr+12
  1517  0008A2  CFF5 F01F          	movff	tablat,??_high_isr+13
  1518                           
  1519                           ;interrupts.c: 51: if (PIR1bits.TMR1IF) {
  1520  0008A6  A09E               	btfss	3998,0,c	;volatile
  1521  0008A8  D00D               	goto	i2l17
  1522                           
  1523                           ;interrupts.c: 52: PIR1bits.TMR1IF = 0;
  1524  0008AA  909E               	bcf	3998,0,c	;volatile
  1525                           
  1526                           ;interrupts.c: 53: Timer1OfCount++;
  1527  0008AC  4A4C               	infsnz	_Timer1OfCount,f,c	;volatile
  1528  0008AE  2A4D               	incf	_Timer1OfCount+1,f,c	;volatile
  1529                           
  1530                           ;interrupts.c: 54: if (Timer1OfCount == 8) {
  1531  0008B0  0E08               	movlw	8
  1532  0008B2  184C               	xorwf	_Timer1OfCount,w,c	;volatile
  1533  0008B4  104D               	iorwf	_Timer1OfCount+1,w,c	;volatile
  1534  0008B6  A4D8               	btfss	status,2,c
  1535  0008B8  D00B               	goto	i2l22
  1536                           
  1537                           ;interrupts.c: 55: T3CONbits.TMR3ON = 0;
  1538  0008BA  90B1               	bcf	4017,0,c	;volatile
  1539                           
  1540                           ;interrupts.c: 56: T1CONbits.TMR1ON = 0;
  1541  0008BC  90CD               	bcf	4045,0,c	;volatile
  1542                           
  1543                           ;interrupts.c: 57: Done = 1;
  1544  0008BE  0E01               	movlw	1
  1545  0008C0  6E50               	movwf	_Done,c	;volatile
  1546                           
  1547                           ;interrupts.c: 58: }
  1548                           ;interrupts.c: 59: } else if (PIR2bits.TMR3IF) {
  1549  0008C2  D006               	goto	i2l22
  1550  0008C4                     i2l17:
  1551  0008C4  A2A1               	btfss	4001,1,c	;volatile
  1552  0008C6  D004               	goto	i2l22
  1553                           
  1554                           ;interrupts.c: 60: PIR2bits.TMR3IF = 0;
  1555  0008C8  92A1               	bcf	4001,1,c	;volatile
  1556                           
  1557                           ;interrupts.c: 61: Timer3OfCount++;
  1558  0008CA  4A4E               	infsnz	_Timer3OfCount,f,c	;volatile
  1559  0008CC  2A4F               	incf	_Timer3OfCount+1,f,c	;volatile
  1560                           
  1561                           ;interrupts.c: 62: } else {
  1562  0008CE  D000               	goto	i2l22
  1563  0008D0                     i2l22:
  1564  0008D0  C01F  FFF5         	movff	??_high_isr+13,tablat
  1565  0008D4  C01E  FFF8         	movff	??_high_isr+12,tblptru
  1566  0008D8  C01D  FFF7         	movff	??_high_isr+11,tblptrh
  1567  0008DC  C01C  FFF6         	movff	??_high_isr+10,tblptrl
  1568  0008E0  C01B  FFF4         	movff	??_high_isr+9,prodh
  1569  0008E4  C01A  FFF3         	movff	??_high_isr+8,prodl
  1570  0008E8  C019  FFDA         	movff	??_high_isr+7,fsr2h
  1571  0008EC  C018  FFD9         	movff	??_high_isr+6,fsr2l
  1572  0008F0  C017  FFE2         	movff	??_high_isr+5,fsr1h
  1573  0008F4  C016  FFE1         	movff	??_high_isr+4,fsr1l
  1574  0008F8  C015  FFEA         	movff	??_high_isr+3,fsr0h
  1575  0008FC  C014  FFE9         	movff	??_high_isr+2,fsr0l
  1576  000900  C013  FFFB         	movff	??_high_isr+1,pclatu
  1577  000904  C012  FFFA         	movff	??_high_isr,pclath
  1578  000908  0011               	retfie		f
  1579  00090A                     __end_of_high_isr:
  1580                           	opt stack 0
  1581                           pclatu	equ	0xFFB
  1582                           pclath	equ	0xFFA
  1583                           tblptru	equ	0xFF8
  1584                           tblptrh	equ	0xFF7
  1585                           tblptrl	equ	0xFF6
  1586                           tablat	equ	0xFF5
  1587                           prodh	equ	0xFF4
  1588                           prodl	equ	0xFF3
  1589                           intcon	equ	0xFF2
  1590                           fsr0h	equ	0xFEA
  1591                           fsr0l	equ	0xFE9
  1592                           wreg	equ	0xFE8
  1593                           fsr1h	equ	0xFE2
  1594                           fsr1l	equ	0xFE1
  1595                           bsr	equ	0xFE0
  1596                           postinc2	equ	0xFDE
  1597                           postdec2	equ	0xFDD
  1598                           fsr2h	equ	0xFDA
  1599                           fsr2l	equ	0xFD9
  1600                           status	equ	0xFD8
  1601                           pclatu	equ	0xFFB
  1602                           pclath	equ	0xFFA
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           prodh	equ	0xFF4
  1608                           prodl	equ	0xFF3
  1609                           intcon	equ	0xFF2
  1610                           fsr0h	equ	0xFEA
  1611                           fsr0l	equ	0xFE9
  1612                           wreg	equ	0xFE8
  1613                           fsr1h	equ	0xFE2
  1614                           fsr1l	equ	0xFE1
  1615                           bsr	equ	0xFE0
  1616                           postinc2	equ	0xFDE
  1617                           postdec2	equ	0xFDD
  1618                           fsr2h	equ	0xFDA
  1619                           fsr2l	equ	0xFD9
  1620                           status	equ	0xFD8
  1621                           
  1622                           	psect	rparam
  1623  0000                     pclatu	equ	0xFFB
  1624                           pclath	equ	0xFFA
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           prodh	equ	0xFF4
  1630                           prodl	equ	0xFF3
  1631                           intcon	equ	0xFF2
  1632                           fsr0h	equ	0xFEA
  1633                           fsr0l	equ	0xFE9
  1634                           wreg	equ	0xFE8
  1635                           fsr1h	equ	0xFE2
  1636                           fsr1l	equ	0xFE1
  1637                           bsr	equ	0xFE0
  1638                           postinc2	equ	0xFDE
  1639                           postdec2	equ	0xFDD
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    40
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     75      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_InitApp
    _InitApp->_printf
    _printf->___llmod
    ___llmod->___lldiv

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1017
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              4     4      0    1017
                                             71 COMRAM     4     4      0
                           _get_freq
                        _init_serial
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              27    21      6     967
                                             53 COMRAM    18    12      6
                            ___lldiv
                            ___llmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     265
                                             44 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     268
                                             31 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _init_serial                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_freq                                            16    12      4      27
                                             31 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            14    14      0       0
                                             17 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     _get_freq
     _init_serial
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _putch

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4B      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      15        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 26 00:10:45 2015

                          l33 0AA0                            l92 0876                            bsr 000FE0  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000  
                         l112 0A90                           l136 0686                           l146 07CA  
                         l604 0984                           l614 09F4                           l910 092C  
                         l912 093A                           l922 0974                           l914 0942  
                         l930 09A8                           l932 09B6                           l950 0804  
                         l934 09BE                           l938 09E4                           l970 0652  
                         l948 07FE                           l972 0658                           l964 063A  
                         l982 06A6                           l992 06DC                           l976 065E  
                         l968 064A                           l986 06CC                           l996 070C  
                         l988 06D0                  __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000  
                         wreg 000FE8                  __CFG_WDT$OFF 000000                          l1000 0710  
                        l1002 071C                          l1006 079A                          l1008 07AE  
                        l1028 0A2A                          STR_1 0629                          i2l22 08D0  
                        i2l17 08C4                          _Done 0050                          _main 0A98  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          fsr2l 000FD9  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 00A2                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010               __end_of_InitApp 0A5E                   InitApp@freq 0048  
                       ?_main 0001               __end_of___lldiv 0996               __end_of___llmod 0A06  
                       _TMR1H 000FCF                         _TMR3H 000FB3                         _TMR1L 000FCE  
                       _TMR3L 000FB2                         _SPBRG 000FAF                         _TXREG 000FAD  
         _ConfigureOscillator 0AA6                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
                ?_init_serial 0001                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               __end_of_dpowers 0629                         _putch 0A86  
             __end_of_low_isr 00A2                         tablat 000FF5                         status 000FD8  
              __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001               __initialization 0A5E  
                __end_of_main 0AA6                        ??_main 004C                 __activetblptr 000002  
            ___llmod@dividend 002D                        ?_putch 0001                        _SPBRGH 000FB0  
              get_freq@result 002C                     ??_InitApp 0048         ??_ConfigureOscillator 0020  
              __CFG_XINST$OFF 000000              __end_of_get_freq 0878              __end_of_high_isr 090A  
              __CFG_STVREN$ON 000000                     ??___lldiv 0028                     ??___llmod 0035  
                      _printf 0630                  __mediumconst 0000                     ??_low_isr 0001  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0020                    __accesstop 0080       __end_of__initialization 0A68  
               ___rparam_used 000001                __pcstackCOMRAM 0001                 __end_of_putch 0A98  
             __CFG_OSC$INTIO7 000000          __size_of_init_serial 0014                       ??_putch 0020  
                     ?_printf 0036                     ?_get_freq 0020                     ?_high_isr 0001  
                     _InitApp 0A06                       __Hparam 0000                       __Lparam 0000  
                     ___lldiv 090A                       ___llmod 0996                  __psmallconst 0600  
                     __pcinit 0A5E                       __ramtop 0600                       __ptext0 0A98  
                     __ptext1 0A06                       __ptext2 0630                       __ptext3 0A86  
                     __ptext4 0996                       __ptext5 090A                       __ptext6 0A72  
                     __ptext7 07CC                       __ptext8 0AA6               __size_of_printf 019C  
                   _T1CONbits 000FCD                       _dpowers 0601                     _T3CONbits 000FB1  
                     _low_isr 0018                    ??_get_freq 0024                    ??_high_isr 0012  
              __pintcode_body 0878          end_of_initialization 0A68                 __Lmediumconst 0000  
                     int_func 0878               ___lldiv@divisor 0024               ___lldiv@counter 002C  
                   _RCSTAbits 000FAB                       printf@c 0047                       printf@f 0036  
                     postdec2 000FDD                       postinc2 000FDE   __end_of_ConfigureOscillator 0AB4  
                   _TXSTAbits 000FAC                   _BAUDCONbits 000FB8                __end_of_printf 07CC  
         start_initialization 0A5E                 _Timer1OfCount 004C                 _Timer3OfCount 004E  
             ___llmod@divisor 0031               ___llmod@counter 0035              __CFG_LPT1OSC$OFF 000000  
                    ??_printf 003C                 ??_init_serial 0020                   __pbssCOMRAM 004C  
           __size_of_get_freq 00AC             __size_of_high_isr 0902                      ?_InitApp 0001  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___lldiv 0020  
                    ?___llmod 002D                   __pintcodelo 0018                   __smallconst 0600  
                    ?_low_isr 0001                __size_of_putch 0012           __end_of_init_serial 0A86  
                    _IPR1bits 000F9F                      _IPR2bits 000FA2                      _PIE1bits 000F9D  
                    _PIE2bits 000FA0                      _PIR1bits 000F9E                      _PIR2bits 000FA1  
            __CFG_WDTPS$32768 000000                     get_freq@i 002A                    printf@flag 003E  
                  printf@prec 003F              __size_of_InitApp 0058                      __Hrparam 0000  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000              __size_of___lldiv 008C  
            __size_of___llmod 0070                   _init_serial 0A72              __size_of_low_isr 008A  
                    _get_freq 07CC                      _high_isr 0008                 __size_of_main 000E  
__size_of_ConfigureOscillator 000E                     printf@val 0041                   _OSCTUNEbits 000F9B  
                  _INTCONbits 000FF2                      intlevel1 0000                      intlevel2 0000  
            ___lldiv@dividend 0020                    _OSCCONbits 000FD3                      printf@ap 0045  
            ___lldiv@quotient 0028  
